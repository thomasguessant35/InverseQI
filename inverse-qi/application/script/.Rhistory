# for(i in 1:length(vecteurs)){
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
# for(i in 1:length(vecteurs)){
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#   for(j in 1:length(vecteurs)){
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#     #print(j)
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
#     test_list[[c]] = as.numeric(list_ajout_h[[j]])+as.numeric(list_dep_h_v[[i]])
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
#     for(k in 1:81){
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
#       if(test_list[[c]][k] >= 1){
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#         test_list[[c]][k] = 1
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
#       }
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
#     }
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#     test_list[[c]] = matrix(test_list[[c]], nrow = 9, ncol = 9)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#     c=c+1
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#   }
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
source('C:/Users/Thomas Guessant/Desktop/InversQI/inverse-qi/application/script/qi_v3.r')
# }
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#     i = i-1
# test_list <- unique(test_list)
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#     i = i-1
#   }
# length(test_list)
#
# longueur = length(test_list)
# for(i in 1:length(test_list)){
#   print(i)
#   if((sum(test_list[[i]][1,]==test_list[[i]][4,])==9) || sum(test_list[[i]][3,] == test_list[[i]][6,])==9){
#     test_list = test_list[-i]
#     i = i-1
#   }
# }
#Crï¿½ation des vecteurs diffï¿½rents dans la liste Vecteurs
vecteurs = gener_vecteurs2()
source('C:/Users/Thomas/Desktop/InversQI/inverse-qi/application/script/fonctions_generator.r')
source('C:/Users/Thomas Guessant/Desktop/InversQI/inverse-qi/application/script/fonctions_generator.r')
length(vecteurs)
#Crï¿½ation des vecteurs diffï¿½rents dans la liste Vecteurs
vecteurs = gener_vecteurs2()
length(vecteurs)
#Application des fonctions aux vecteurs
list = gener_listes(vecteurs)
list_h = list$list_hor
list_v = list$list_ver
list_finale = list$list_final
#Apprendre le jeu aux neurones
model =learn(list_finale)
#Gï¿½nï¿½ration de question
question<-as.integer(args[1])
#Inverse IQ : vï¿½rifie sur la reponse prï¿½dite est identique ï¿½ la vraie reponse
prediction = inverse_IQ(model, question)
yes
Y
Y
.libPaths()
#Crï¿½ation des vecteurs diffï¿½rents dans la liste Vecteurs
vecteurs = gener_vecteurs2()
length(vecteurs)
#Application des fonctions aux vecteurs
list = gener_listes(vecteurs)
list_h = list$list_hor
list_v = list$list_ver
list_finale = list$list_final
#Apprendre le jeu aux neurones
model =learn(list_finale)
Y
Y
setwd("C:/Users/Thomas Guessant/Desktop/InversQI/inverse-qi/application/script")
